
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    testImplementation 'org.mockito:mockito-core:3.12.4'

}

application {
    // Define the main class for the application.
    mainClass = 'App'
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
    }
}

test {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


// custom task for running the program interactively using gradle
task runInteractive(type: JavaExec) { // for running the program interactively
// i.e. demo using gradle runInteractive --console=plain
    main = 'App'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}
